services:

  # Webserver
  nginx:
    container_name: nginx
    image: nginx:0.1
    build:
      context: ./services/nginx/
    ports:
      - "443:443"
      - "80:80"
    restart: unless-stopped
    volumes:
      - static-files:/var/www/django-files/static
    depends_on:
      - django
    networks:
      - transcendence-network

  # Framework
  django:
    container_name: django
    image: django:0.1
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - SECRET_KEY=${SECRET_KEY}
      - INTRA_OAUTH_CLIENT_ID=${INTRA_OAUTH_CLIENT_ID}
      - INTRA_OAUTH_SECRET=${INTRA_OAUTH_SECRET}
    build:
      context: ./services/django
    ports:
      - "8000:8000"
    volumes:
      - ./services/django/srcs/:/app
      - static-files:/app/transcendence/staticfiles
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - transcendence-network
    stdin_open: true
    tty: true
  
  #Database
  postgres:
    container_name: postgres
    image: postgres:0.1
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    build:
      context: ./services/postgres
    volumes:
      - postgres-volume:/var/lib/postgresql/data/
    restart: unless-stopped
    networks:
      - transcendence-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Key-Value store for Django Channels
  redis:
    container_name: redis
    build:
      context: ./services/redis
    volumes:
      - redis-volume:/data
    networks:
      - transcendence-network

networks:
  transcendence-network:
    name: transcendence-network

volumes:

  static-files:
    driver: local
  postgres-volume:
    driver: local
  redis-volume: